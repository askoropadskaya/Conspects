Итого
Для написания полиморфных (это удобно!) функций нам нужна проверка типов.

Для примитивов с ней отлично справляется оператор typeof.

У него две особенности:

Он считает null объектом, это внутренняя ошибка в языке.
Для функций он возвращает function, по стандарту функция не считается базовым типом, 
но на практике это удобно и полезно.
Для встроенных объектов мы можем получить тип из скрытого свойства [[Class]], 
при помощи вызова {}.toString.call(obj).slice(8, -1). Для конструкторов, которые объявлены нами, 
[[Class]] всегда равно "Object".

Оператор obj instanceof Func проверяет, создан ли объект obj функцией Func, работает для любых конструкторов. 
Более подробно мы разберём его в главе Проверка класса: "instanceof".

И, наконец, зачастую достаточно проверить не сам тип, а просто наличие нужных свойств или методов. 
Это называется «утиная типизация».
