Есть 2 способа проверить, что переданное значение является Not-A-Number (NaN) - это Number.isNaN() и isNaN(). И они отличаются.

Конспект
Несмотря на то, что NaN является 'не числом', но его тип определяется как number, проверить тип переданных данных через оператор typeof в таком случае не получится.

Для проверки такого значения необходимо использовать специальную функцию и метод:

Функция isNaN(value) преобразует значение в число и проверяет, является ли оно NaN:
console.log(isNaN('23')); // false
console.log(isNaN('fun')); // true
Метод Number.isNaN(value) определяет, является ли переданное значение NaN:
console.log(Number.isNaN('23')); // false
console.log(Number.isNaN('fun')); // false
Number.isNaN() не преобразовывает переданный в него аргумент в число, т.е. данный метод вернёт true только для числовых значений, имеющих значение NaN.

console.log(isNaN(undefined)); // true
console.log(Number.isNaN(undefined)); // false
console.log(Number.isNaN(NaN)); // true
Подробнее о isNaN() и Number.isNaN() можно прочитать здесь:

https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/isNaN


NaN невозможно сравнить с другими значениями через ==, ===, !== и !=, т.к. оно не равно ничему другому, даже самому себе:

console.log('cat' === NaN); // false
console.log(NaN === NaN); // false
console.log(NaN == NaN); // false
Поэтому для проверки нужно использовать isNaN() или Number.isNaN(), чтобы преобразовать значение сначала в true или false, а затем производить сравнение:

console.log(isNaN('19') === true); // false,
console.log(isNaN('Hello') === true); // true
console.log(isNaN('Hello') === isNaN(NaN)); // true
NaN уникальное значение, и только для него в JavaScript следующие неравенства вернут true:

console.log(NaN != NaN); // true
console.log(NaN !== NaN); // true
Такое сравнение можно использовать как альтернативный вариант для сравнения с NaN.

Подробнее о isNaN() и Number.isNaN() можно прочитать здесь:

https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/isNaN
